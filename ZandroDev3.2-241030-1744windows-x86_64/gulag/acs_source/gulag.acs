#nocompact
#pragma raw include on

#library "gulag"

#import "zcommon.bcs"
#import "lib/bcsutils.g.acs"
#import "lib/log.g.acs"

#include "cheats.acs"
#include "player.acs"
#include "gamestate.acs"

strict namespace{

int round = 0;

void prepBuff(bool set)
{
    LogDebug(__FUNCTION__ + " : Bros are \ck" + (set == true ? "buffed omgggg" : "weak mfs rn"));
    int on = (set == true ? 1 : 0);
    SetPlayerProperty(1, on, PROP_INVULNERABILITY);
    SetPlayerProperty(1, on, PROP_FROZEN);
}

void returnToStartPoint()
{
    for(int i = 0; i <= 1; i++)
    {
        SetActorPosition(GetPlayerTid(i), spawnLoc[i].x, spawnLoc[i].y, spawnLoc[i].z, false);
    }
}

Script 1 OPEN
{
    if(PlayerCount() < 2)
    {
        LogError("The game is not an online game!");
        terminate;
    }

    prepBuff(true);

    //
    // Waiting
    //

    setGameState(GULAG_WAITING);
    while(gamestate == GULAG_WAITING)
    {
        if(pready[0] == true && pready[1] == true)
            break;
        delay(1);
    }

    while(true)
    {
        round++;
        if(round > 3)
            break; 

        //
        // Countdown
        //

        // Revives the dead player
        for(int i = 0; i <= 1; i++)
        {
            if(PlayerIsDeadSpectator(i))
            {
                LogDebug(__SCRIPT__ + " : Revived a player \ck" + str(i));
                SetDeadSpectator(i, false);
            }
        }
        
        returnToStartPoint();
        setGameState(GULAG_COUNTDOWN);
        // countdown ui
        delay(5 * 35);

        //
        // In progress
        //
        
        setGameState(GULAG_INPROGRESS);
        prepBuff(false);
        int flagtimer = 0;
        while(gamestate == GULAG_INPROGRESS)
        {
            delay(1);
            flagtimer++;
            if(flagtimer >= 30 * 35 && flagtimer < 1337 * 35)
            {
                // flag appeared ui
                // Spawn flag
                flagtimer = 1337 * 35; // There might be better ways, but I'm outta time
            }
        }
        // who fragged someone ui
        delay(5*35);
    }       

    //
    // Post game
    //

    int winner = (score[0] > score[1] ? 0 : 1);

    // A player won! msg
    LogDebug(__SCRIPT__ + " : \ckPlayer " + str(winner) + "\c- Won");
    LogDebug(__SCRIPT__ + " : Game ended, restarting the map");
    delay(5 * 35);
    ResetMap();
}

Script "Death" DEATH
{
    if(gamestate == GULAG_INPROGRESS)
    {
        LogDebug(__SCRIPT__ + " : Player \ck" + str(PlayerNumber()) + "\c- is dead, not big surprise");
        scorePlayer((PlayerNumber() == 0 ? 1 : 0));
        setGameState(GULAG_MATCHOVER);
    }
}

}