strict namespace{

bool pready[2] = {false, false};
int score[2] = {0, 0};

internal enum { CONST_PLAYER_TID = 99900 };

bool CheckPlayerNumber(int pnum, str func)
{
    // Checks if pnum is valid playernumber
    if(pnum < 0 || pnum >= MAX_PLAYERS)
    {
        LogError(__FUNCTION__ + " : Called from " + func + " : pnum " + str(pnum) + " is not a valid playernumber! Returning false.");
        return false;
    }
    return true;
}

int GetPlayerTid(int pnum)
{   
    if(!CheckPlayerNumber(pnum, __FUNCTION__))
        return -1;

    return pnum + CONST_PLAYER_TID;
}

int GetPlayerNumberFromTid(int tid)
{   
    return tid - CONST_PLAYER_TID;
}

void armPlayers()
{
    for(int i = 0; i <= 1; i++)
    {
        int tid = GetPlayerTid(i);
        ClearActorInventory(tid);
        GiveActorInventory(tid, "M1Garand", 1);
        GiveActorInventory(tid, "M1911", 1);
        SetActorSpeed(tid, 0.6);

        if(!CheckActorInventory(tid, "M1Garand"))
            LogError(__FUNCTION__ + " : \ckPlayer " + str(i) + " \c-was not given \ck" + "M1Garand");
        if(!CheckActorInventory(tid, "M1911"))
            LogError(__FUNCTION__ + " : \ckPlayer " + str(i) + " \c-was not given \ck" + "M1911");
        
    }
    LogDebug(__FUNCTION__ + " : Players were armed");
}

void scorePlayer(int pnum)
{
    if(gamestate == GULAG_INPROGRESS)
    {
        LogDebug(__FUNCTION__ + " : Player \ck" + str(pnum) + " Scored!"); 
        score[pnum]++;
        if(pnum == 0) 
        {
            AmbientSound("loxin_player1_scored", 128);
            SyncVariable(20003, score[pnum]);
        }
        else
        {
            AmbientSound("loxin_player2_scored", 128);
            SyncVariable(20004, score[pnum]);
        }
            
        HUDMSGPlain("Player \ck" + str(pnum + 1) + " Scored!", 160.0, 120.0);
        
        
        
        setGameState(GULAG_MATCHOVER);
    }
    else
        LogWarning(__FUNCTION__ + " : Somehow I was called in the gamestate" + str(gamestate) + ". Check your code again, retard!");
}

Script "Player" ENTER
{   
    //LogDebug(__SCRIPT__ + " : init");
    
    FadeRange(0, 0, 0, 1.0, 0, 0, 0, 1.0, 0.0);
    Thing_ChangeTID(0, GetPlayerTid(PlayerNumber()));
    ClearInventory();
    while(true)
    {
        if(gamestate == GULAG_COUNTDOWN)
            break;
        if(KeyPressed(BT_JUMP))
        {
            if(pready[PlayerNumber()] == false)
            {
                LogDebug(__SCRIPT__ + " : Player \ck" + str(PlayerNumber()) + " Ready");
                pready[PlayerNumber()] = true;
            }
            else
            {
                LogDebug(__SCRIPT__ + " : Player \ck" + str(PlayerNumber()) + " Unready");
                pready[PlayerNumber()] = false;
            }
        }
        delay(1);
    }

    FadeRange(0, 0, 0, 1.0, 0, 0, 0, 0.0, 0.0);
}


Script "Respawn" RESPAWN
{
    Thing_ChangeTID(0, GetPlayerTid(PlayerNumber()));
    SetPlayerProperty(0, on, PROP_FROZEN);
}

}